name: Nix Flake actions

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - main

jobs:

  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v29
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      # - uses: jlumbroso/free-disk-space@main
      #   with:
      #     tool-cache: true
      #     swap-storage: false
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v29
      - uses: cachix/cachix-action@v15
        with:
          name: mur
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build "${{ matrix.attr }}"
        run: NIXPKGS_ALLOW_UNFREE=1 nix build -L ".#${{ matrix.attr }}" --impure

  nix-build-stable:
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      # - uses: jlumbroso/free-disk-space@main
      #   with:
      #     tool-cache: true
      #     swap-storage: false
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v29
      - uses: cachix/cachix-action@v15
        with:
          name: mur
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build "${{ matrix.attr }}"
        run: NIXPKGS_ALLOW_UNFREE=1 nix build --inputs-from . --override-input nixpkgs stable -L ".#${{ matrix.attr }}" --impure
